class PredicateProofs {
    static String[] any_rule = {
            "#->^->%",
            "#&^->#",
            "#&^->^",
            "#->^->%",
            "(#->^->%)->#&^->#->^->%",
            "#&^->#->^->%",
            "(#&^->#)->(#&^->#->^->%)->#&^->^->%",
            "(#&^->#->^->%)->#&^->^->%",
            "#&^->^->%",
            "(#&^->^)->(#&^->^->%)->(#&^->%)",
            "(#&^->^->%)->(#&^->%)",
            "#&^->%",
            "#&^->@%",
            "#->^->#&^",
            "#&^->@%",
            "(#&^->@%)->#->#&^->@%",
            "#->#&^->@%",
            "(#&^->@%)->^->#&^->@%",
            "((#&^->@%)->^->#&^->@%)->#->(#&^->@%)->^->#&^->@%",
            "#->(#&^->@%)->^->#&^->@%",
            "(#->#&^->@%)->(#->((#&^->@%)->^->#&^->@%))->#->^->#&^->@%",
            "(#->((#&^->@%)->^->#&^->@%))->#->^->#&^->@%",
            "#->^->#&^->@%",
            "(^->#&^)->(^->#&^->@%)->^->@%",
            "((^->#&^)->(^->#&^->@%)->^->@%)->#->(^->#&^)->(^->#&^->@%)->^->@%",
            "#->(^->#&^)->(^->#&^->@%)->^->@%",
            "(#->^->#&^)->(#->(^->#&^)->(^->#&^->@%)->^->@%)->#->(^->#&^->@%)->^->@%",
            "(#->(^->#&^)->(^->#&^->@%)->^->@%)->#->(^->#&^->@%)->^->@%",
            "#->(^->#&^->@%)->^->@%",
            "(#->^->#&^->@%)->(#->(^->#&^->@%)->^->@%)->#->^->@%",
            "(#->(^->#&^->@%)->^->@%)->#->^->@%"
    };
    static String[] exists_rule = {
            "^->#->^",
            "#->^->%",
            "(#->^->%)->^->#->^->%",
            "^->#->^->%",
            "(#->^)->(#->^->%)->#->%",
            "((#->^)->(#->^->%)->#->%)->^->(#->^)->(#->^->%)->#->%",
            "^->(#->^)->(#->^->%)->#->%",
            "(^->#->^)->(^->(#->^)->(#->^->%)->#->%)->^->(#->^->%)->#->%",
            "(^->(#->^)->(#->^->%)->#->%)->^->(#->^->%)->#->%",
            "^->(#->^->%)->#->%",
            "(^->#->^->%)->(^->(#->^->%)->#->%)->^->#->%",
            "(^->(#->^->%)->#->%)->^->#->%",
            "^->#->%",
            "?^->#->%",
            "#->?^->#",
            "?^->#->%",
            "(?^->#->%)->#->?^->#->%",
            "#->?^->#->%",
            "(?^->#)->(?^->#->%)->?^->%",
            "((?^->#)->(?^->#->%)->?^->%)->#->(?^->#)->(?^->#->%)->?^->%",
            "#->(?^->#)->(?^->#->%)->?^->%",
            "(#->?^->#)->(#->(?^->#)->(?^->#->%)->?^->%)->#->(?^->#->%)->?^->%",
            "(#->(?^->#)->(?^->#->%)->?^->%)->#->(?^->#->%)->?^->%",
            "#->(?^->#->%)->?^->%",
            "(#->?^->#->%)->(#->(?^->#->%)->?^->%)->#->?^->%",
            "(#->(?^->#->%)->?^->%)->#->?^->%"
    };
}
